#!/bin/bash

# Проверка наличия всех аргументов
if [ "$#" -lt 5 ]; then
    echo "Использование: $0 <число запусков> <режим работы> <размер матрицы> <макс. число итераций> <исполняемый файл (.out)>"
    exit 1
fi

# Присвоение переменных
RUNS=$1         # Число запусков для каждой конфигурации
MODE=$2         # Режим работы (1 или 2)
MATRIX=$3       # Размер матрицы
ITER=$4         # Максимальное число итераций
EXE=$5          # Исполняемый файл (с расширением .out)

# Проверяем, существует ли исполняемый файл
if [ ! -x "./$EXE" ]; then
    echo "Ошибка: файл $EXE не найден или не является исполняемым!"
    exit 1
fi

# Массив с вариантами числа потоков (теперь: 1, 2, 4, 8, 16)
THREADS_LIST=(1 2 4 8 16)

# Ассоциативный массив для хранения минимального времени по конфигурациям
declare -A min_times

# Проходим по вариантам числа потоков
for threads in "${THREADS_LIST[@]}"; do
    echo "====================================="
    echo "Запускаем с $threads потоками"
    echo "====================================="

    # Устанавливаем число потоков для OpenMP
    export OMP_NUM_THREADS=$threads

    # Массив для хранения времени каждого запуска
    declare -a times=()

    for ((i=1; i<=RUNS; i++)); do
        echo "Запуск №$i:"

        # Запускаем программу и сохраняем вывод
        output=$(./"$EXE" "$MODE" "$MATRIX" "$ITER")

        # Вывод результата запуска (при необходимости можно закомментировать)
        echo "$output"

        # Извлекаем строку с временем выполнения (ожидается: "Время выполнения: <число> секунд.")
        time_line=$(echo "$output" | grep "Время выполнения:")

        # Извлекаем числовое значение с помощью sed
        time_val=$(echo "$time_line" | sed -n 's/.*Время выполнения: \([0-9.]*\) секунд.*/\1/p')

        if [ -z "$time_val" ]; then
            echo "Не удалось извлечь время выполнения из вывода."
        else
            echo "Извлечено время: $time_val секунд"
            times+=("$time_val")
        fi

        echo "-------------------"
    done

    # Поиск минимального времени для текущей конфигурации
    if [ ${#times[@]} -gt 0 ]; then
        min_time=${times[0]}
        for t in "${times[@]}"; do
            cmp=$(awk -v a="$t" -v b="$min_time" 'BEGIN {print (a < b) ? 1 : 0}')
            if [ "$cmp" -eq 1 ]; then
                min_time=$t
            fi
        done

        echo -e "\nМинимальное время для $threads потоков: $min_time секунд"
        min_times[$threads]=$min_time
    else
        echo "Не удалось получить замеры для $threads потоков."
    fi

    echo -e "\n\n"
done

# Вывод итоговых результатов для всех вариантов
echo "====================================="
echo "Итоговые минимальные времена:"
for threads in "${THREADS_LIST[@]}"; do
    if [ -n "${min_times[$threads]}" ]; then
        echo "$threads потока: ${min_times[$threads]} секунд"
    else
        echo "$threads потока: замеры отсутствуют"
    fi
done
